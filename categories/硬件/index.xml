<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>硬件 on 不正经的正经程序猿</title>
    <link>https://www.tylinux.com/categories/%E7%A1%AC%E4%BB%B6/</link>
    <description>Recent content in 硬件 on 不正经的正经程序猿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Thu, 03 Jun 2021 00:54:26 +0800</lastBuildDate><atom:link href="https://www.tylinux.com/categories/%E7%A1%AC%E4%BB%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>也折腾博云物联辣鸡网络摄像头（上）</title>
      <link>https://www.tylinux.com/post/hack_boyun_ipcamera_01/</link>
      <pubDate>Thu, 03 Jun 2021 00:54:26 +0800</pubDate>
      
      <guid>https://www.tylinux.com/post/hack_boyun_ipcamera_01/</guid>
      <description>相关资源文件可至：https://github.com/tylinux/HackBoyunIPCamera 下载
 前几天看了 用垃圾网络摄像头构建的家庭直播系统 这篇帖子，也想试着玩儿玩儿网络摄像头，就买了帖子里提到的 38 俩包邮的博云物联摄像头。
到手拆机：
 海思 HI3518CV100 的主控芯片 瑞昱 RTL8188ETV WiFi 模块 开搞。
TTL 第一步是先找到 TTL 接口，这样就能观察启动过程，刷完系统也好辨别是否工作正常，是哪里出了问题。 思路如下：
 找明确标记为 RX, TX 的测试点 找比较可疑的两个、三个、或者四个并排的测试点 终极方案：把主控吹下来，按照 datasheet 里标记的 RX，TX 引脚找对应的测试点  很幸运，板子背面就有三个一排的可疑测试点，推测可能就是 TTL 接口，用万用表很轻松找到 GND，RX，TX 则通过上电时的电压变化来区分，因为上电时 TX 会有比较多的信息要输出，所以电压变化会比较大。
按照猜想焊上，连接 PC，波特率 115200，上电验证，成功~
TTL 测试点定义：
 启动日志：
U-Boot 2010.06-dirty (Feb 06 2015 - 19:53:21) Check spi flash controller v350... Found Spi(cs1) ID: 0xEF 0x40 0x17 0x00 0x00 0x00 Spi(cs1): Block:64KB Chip:8MB Name:&amp;quot;W25Q64FV&amp;quot; In: serial Out: serial Err: serial Hit any key to stop autoboot: 0 8192 KiB hi_sfc at 0:0 is now current device ## Booting kernel from Legacy Image at 82000000 .</description>
    </item>
    
    <item>
      <title>翻车日记0: HP ElitePad 1000 G2 加装 USB 2.0 接口</title>
      <link>https://www.tylinux.com/post/add_usb_and_dc_power_for_hp_elite_pad_1000_g2/</link>
      <pubDate>Mon, 25 Jan 2021 19:20:58 +0800</pubDate>
      
      <guid>https://www.tylinux.com/post/add_usb_and_dc_power_for_hp_elite_pad_1000_g2/</guid>
      <description>文中记录的改装方法确认可以生效，翻车的是我这个个案
 前几日脑子一热，闲鱼入手一台 HP ElitePad 1000 G2 Windows 平板，单主机 199，加改装 DC 充电 260。这个平板很神奇，因为充电器接口使用的是 HP 自己的接口，所以充电器的价格几乎快和主机一个加钱了 ಥ_ಥ，所以入手了改装充电的套餐。
回来之后，感觉自带的 Windows 10 版本比较老，想升级一下系统，然后系统自带的更新不可用，还没有 USB 接口，闲鱼上有 SD 卡重装系统的教程，还特娘的要 30，感觉这平板不值钱，其他的都特娘的值钱。
所以，开始研究怎么特娘的给他加个 USB 接口（噩梦的开始）。
改装 USB 2.0 端口 拆开主机，取下屏幕，映入眼帘的是一块硕大的电池，娇小的主板，和一个过时的 3G 网卡： 这里的网卡型号是华为 MU736，按照文档所述，网卡接口是 M.2 Socket 2，具体来讲应该是 M.2 Socket 2 Key B，接口的主要功能包括：
 PCIe x2 / SATA /USB 2.0 / USB 3.0 / HSIC / SSIC / Audio / UIM / I2C
 再依据 M.2 Socket 2 Key B 的 pinout，可以确定 USB 2.</description>
    </item>
    
    <item>
      <title>喜提新开(you)发(xi)机</title>
      <link>https://www.tylinux.com/post/hackintosh-with-amd-ryzen-3700x/</link>
      <pubDate>Sun, 22 Dec 2019 00:42:33 +0800</pubDate>
      
      <guid>https://www.tylinux.com/post/hackintosh-with-amd-ryzen-3700x/</guid>
      <description>&lt;p&gt;上次配置的 AMD 黑苹果放到公司，替代 Macbook Pro 2015 做日常开发了，虽然主频只有 3.8Ghz，但是 8C16T，32GB 内存，性能还是吊打 Macbook Pro 的 2.2G 4C8T，16GB的。&lt;/p&gt;
&lt;p&gt;家里的老台式还是 2014 年的时候配置的，当时是通过开源夏令营获得了 4400 块的奖金。研究了好几天配置了一台 Core i5 4590 4C4T + 8GB 内存的 MATX 台式。虽然后来内存加到了 16GB, 也添加了 AMD RX470D 显卡，但在搞点儿开发的时候，还是有些力不从心。所以萌生了配置一台新设备的想法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>macOS 下开发 51 单片机应用</title>
      <link>https://www.tylinux.com/post/develop-mcs51-on-macOS/</link>
      <pubDate>Fri, 27 Sep 2019 00:41:14 +0800</pubDate>
      
      <guid>https://www.tylinux.com/post/develop-mcs51-on-macOS/</guid>
      <description>&lt;p&gt;最近 DIY 之心又又又又复活了，翻出来吃灰多年的 51 开发板，重新学习一下 51。现在主力系统已经换成了 macOS，在折腾环境搭建的过程中，踩了一丢丢坑，特此记录一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AMD Ryzen 1700 也吃黑苹果</title>
      <link>https://www.tylinux.com/post/hackintosh-with-amd-ryzen-1700/</link>
      <pubDate>Tue, 07 May 2019 19:10:39 +0000</pubDate>
      
      <guid>https://www.tylinux.com/post/hackintosh-with-amd-ryzen-1700/</guid>
      <description>&lt;p&gt;公司配发的笔记本是 &lt;code&gt;MacBook Pro 15&#39; Mid 2015&lt;/code&gt;，随着公司工程的逐步膨胀，老家伙干活越来越吃力。便有了组建一台黑苹果干编译这些脏活儿累活儿，笔记本就用来开会的想法。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
