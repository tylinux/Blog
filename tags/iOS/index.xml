<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS on 不正经的正经程序猿</title>
    <link>https://www.tylinux.com/tags/iOS/</link>
    <description>Recent content in iOS on 不正经的正经程序猿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Mon, 17 May 2021 18:25:58 +0800</lastBuildDate><atom:link href="https://www.tylinux.com/tags/iOS/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CocoaPods 小坑一例</title>
      <link>https://www.tylinux.com/post/one_small_cocoapods_issue/</link>
      <pubDate>Mon, 17 May 2021 18:25:58 +0800</pubDate>
      
      <guid>https://www.tylinux.com/post/one_small_cocoapods_issue/</guid>
      <description>错误信息 [!] The &#39;Pods-xxx&#39; target has libraries with conflicting names: libflipper-rsocket.a. 背景信息 公司使用的是二进制化后的 pod，podspec 中使用 vendored_libraries 引入了 libFlipper-RSocket.a，然而在 pod install 的时候，出现了如上的错误，搜索一下，别人出现这个问题是两个不同的 pod 引用了相同的 .a 文件。但是我可以肯定我这里是没有这个问题的。
排查 根据报错的信息，找到源码位置：lib/cocoapods/installer/xcode/target_validator.rb，如下：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  def verify_no_duplicate_framework_and_library_names aggregate_targets.each do |aggregate_target| aggregate_target.user_build_configurations.each_key do |config| pod_targets = aggregate_target.pod_targets_for_build_configuration(config) file_accessors = pod_targets.flat_map(&amp;amp;:file_accessors).select { |fa| fa.spec.library_specification? } frameworks = file_accessors.</description>
    </item>
    
    <item>
      <title>iPhone SE 降级 iOS 13.2.3</title>
      <link>https://www.tylinux.com/post/downgrade-iOS-13-3-to-13-2-3/</link>
      <pubDate>Sun, 05 Jan 2020 01:11:06 +0800</pubDate>
      
      <guid>https://www.tylinux.com/post/downgrade-iOS-13-3-to-13-2-3/</guid>
      <description>&lt;p&gt;手头有部之前在咸鱼上 80 块购入的有 ID 的 iPhone SE，系统 iOS 13.1.2，使用 checkra1n 绕过了 iCloud Lock。今儿翻出来想玩玩儿 checkra1n，想都没想就升级到了最新的 iOS 13.3，升级结束才想起来，自 iOS 13.0 beta4 开始，Apple 修复了通过重命名 &lt;code&gt;Setup.app&lt;/code&gt; 的方式绕过 iCloud Lock 的漏洞，一试果然，重命名 &lt;code&gt;Setup.app&lt;/code&gt; 后，Home 键不响应，重启之后，文件系统自动恢复到修改之前。一番搜索无果，想起自己保存了自 iOS 12.4 开始的所有 APTicket，遂决定恢复到 iOS 13.2.3，中间碰到一点儿小问题，特此记录一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>React Native 疑难 Crash 一例</title>
      <link>https://www.tylinux.com/post/fix-a-react-native-crash-on-mutex/</link>
      <pubDate>Tue, 13 Aug 2019 15:23:40 +0000</pubDate>
      
      <guid>https://www.tylinux.com/post/fix-a-react-native-crash-on-mutex/</guid>
      <description>&lt;p&gt;我司客户端中使用了 React Native 0.54.3 版本，自接入开始，就出现了一类很诡异的 Crash，崩溃信息如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 futurerestore 从 iOS 11.1.2 升级至 11.3.1</title>
      <link>https://www.tylinux.com/post/upgrade-from-iOS-11-1-2-to-iOS-11-3-1-with-blob/</link>
      <pubDate>Thu, 12 Jul 2018 23:28:03 +0000</pubDate>
      
      <guid>https://www.tylinux.com/post/upgrade-from-iOS-11-1-2-to-iOS-11-3-1-with-blob/</guid>
      <description></description>
    </item>
    
    <item>
      <title>(译) 在 iOS 11.3 之后的系统中 remount RootFS 为可读写</title>
      <link>https://www.tylinux.com/post/Remount-rootfs-after-iOS-11-3/</link>
      <pubDate>Tue, 12 Jun 2018 02:30:48 +0000</pubDate>
      
      <guid>https://www.tylinux.com/post/Remount-rootfs-after-iOS-11-3/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文链接：https://media.weibo.cn/article?id=2309404245794218721506
作者：Xiaolong Bai and Min (Spark) Zheng @ Alibaba Security Lab
译者：tylinux
博客地址: &lt;a href=&#34;https://www.tylinux.com&#34;&gt;https://www.tylinux.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>dumpdecrypted.dylib 原理分析</title>
      <link>https://www.tylinux.com/post/how-dumpdecrypted-dylib-works/</link>
      <pubDate>Mon, 12 Mar 2018 20:56:08 +0000</pubDate>
      
      <guid>https://www.tylinux.com/post/how-dumpdecrypted-dylib-works/</guid>
      <description>&lt;p&gt;在 iOS 平台上，从 App Store 下载的 App 会被 Apple 使用 &lt;code&gt;FairPlay&lt;/code&gt; 技术加密，使得程序无法在其他未登录相同 AppleID 的设备上运行，起到 &lt;code&gt;DRM&lt;/code&gt; 的作用。这样的文件同样也无法使用 IDA Pro 等工具进行分析。不管是出于安全研究还是再次分发的目的，都需要获取未加密的二进制文件，这一过程俗称砸壳。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS 11.0 - 11.1.2 越狱插件安装指南</title>
      <link>https://www.tylinux.com/post/install-tweak-with-electra-on-ios11/</link>
      <pubDate>Wed, 07 Feb 2018 23:45:49 +0000</pubDate>
      
      <guid>https://www.tylinux.com/post/install-tweak-with-electra-on-ios11/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Electra 1.0 已经释出，包含 Cydia，下边的内容可能不适用于新版本的 Electra，仅供理解 Cydia 原理用。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>搭建私有Cydia源</title>
      <link>https://www.tylinux.com/post/create-private-cydia-repo/</link>
      <pubDate>Tue, 22 Aug 2017 13:40:36 +0000</pubDate>
      
      <guid>https://www.tylinux.com/post/create-private-cydia-repo/</guid>
      <description>&lt;p&gt;在通过 &lt;code&gt;TheOS&lt;/code&gt; 完成 Tweak 的开发后，我们通常会执行 &lt;code&gt;make package install&lt;/code&gt; 命令来将 Tweak 安装到越狱设备上。但如果需要将 Tweak 部署到大量设备上，安装和更新都是一个问题。这个时候，我们可以通过部署私有的 Cydia 源来完成 Tweak 的安装和更新。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
